<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的第一个博客</title>
    <url>/2024/01/31/hello/</url>
    <content><![CDATA[<h3 id="这是我的第一个博客，我将在这里分享我的相关内容"><a href="#这是我的第一个博客，我将在这里分享我的相关内容" class="headerlink" title="这是我的第一个博客，我将在这里分享我的相关内容"></a>这是我的第一个博客，我将在这里分享我的相关内容</h3>]]></content>
  </entry>
  <entry>
    <title>我的线段树模板</title>
    <url>/2024/02/02/%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
    <content><![CDATA[<h1 id="以下是我的线段树模板"><a href="#以下是我的线段树模板" class="headerlink" title="以下是我的线段树模板"></a>以下是我的线段树模板</h1><p>参考了dls的线段树模板，封装<code>+</code>减少了许多的码量</p>
<h2 id="单点修改"><a href="#单点修改" class="headerlink" title="单点修改"></a>单点修改</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*http://oj.daimayuan.top/course/15/problem/658*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">info</span>&#123;</span><br><span class="line">	<span class="type">int</span> ans,s,ps,bs;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	info val;</span><br><span class="line">&#125;node[N*<span class="number">4</span>];</span><br><span class="line">info <span class="keyword">operator</span> +(<span class="type">const</span> info &amp;a,<span class="type">const</span> info &amp;b)&#123;</span><br><span class="line">	info res;</span><br><span class="line">	res.ans=<span class="built_in">max</span>(&#123;a.ans,b.ans,a.bs+b.ps&#125;);</span><br><span class="line">	res.ps=<span class="built_in">max</span>(a.ps,a.s+b.ps);</span><br><span class="line">	res.bs=<span class="built_in">max</span>(b.bs,a.bs+b.s);</span><br><span class="line">	res.s=a.s+b.s;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	node[id].val=node[id*<span class="number">2</span>].val+node[id*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		node[id]=&#123;a[l],a[l],a[l],a[l]&#125;;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="built_in">build</span>(id*<span class="number">2</span>,l,mid);</span><br><span class="line">		<span class="built_in">build</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		node[id].val=&#123;d,d,d,d&#125;;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">change</span>(id*<span class="number">2</span>,l,mid,pos,d);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">change</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,pos,d);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">info <span class="title">query</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> ql,<span class="type">int</span> qr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==ql&amp;&amp;r==qr)&#123;</span><br><span class="line">		<span class="keyword">return</span> node[id].val;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(qr&lt;=mid)<span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>,l,mid,ql,qr);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ql&gt;mid)<span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,ql,qr);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>,l,mid,ql,mid)+<span class="built_in">query</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,qr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;a[i];</span><br><span class="line">	<span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">	<span class="keyword">while</span>(q--)&#123;</span><br><span class="line">		<span class="type">int</span> opt;</span><br><span class="line">		cin&gt;&gt;opt;</span><br><span class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="type">int</span> x,d;</span><br><span class="line">			cin&gt;&gt;x&gt;&gt;d;</span><br><span class="line">			<span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,n,x,d);</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">int</span> l,r;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">			<span class="keyword">auto</span> res=<span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,n,l,r);</span><br><span class="line">			cout&lt;&lt;res.ans&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h2 id="区间修改"><a href="#区间修改" class="headerlink" title="区间修改"></a>区间修改</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*http://oj.daimayuan.top/course/15/problem/660*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">info</span>&#123;</span><br><span class="line">	<span class="type">int</span> sum;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tag</span>&#123;</span><br><span class="line">	<span class="type">int</span> mul,add;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	info val;</span><br><span class="line">    <span class="type">int</span> sz;</span><br><span class="line">	tag t;</span><br><span class="line">&#125;node[N*<span class="number">4</span>];</span><br><span class="line">info <span class="keyword">operator</span>+(<span class="type">const</span> info &amp;a,<span class="type">const</span> info &amp;b)&#123;</span><br><span class="line">	<span class="keyword">return</span> &#123;(a.sum+b.sum)%mod&#125;;</span><br><span class="line">&#125;</span><br><span class="line">tag <span class="keyword">operator</span>+(<span class="type">const</span> tag &amp;a,<span class="type">const</span> tag &amp;b)&#123;</span><br><span class="line">	<span class="keyword">return</span> &#123;a.mul*b.mul%mod,(a.add*b.mul+b.add)%mod&#125;;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">settag</span><span class="params">(<span class="type">int</span> id,tag t)</span></span>&#123;</span><br><span class="line">	node[id].t=node[id].t+t;</span><br><span class="line">	node[id].val.sum=(node[id].val.sum*t.mul+node[id].sz*t.add)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	node[id].val=node[id*<span class="number">2</span>].val+node[id*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(node[id].t.mul!=<span class="number">1</span>||node[id].t.add!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">settag</span>(id*<span class="number">2</span>,node[id].t);</span><br><span class="line">		<span class="built_in">settag</span>(id*<span class="number">2</span>+<span class="number">1</span>,node[id].t);</span><br><span class="line">		node[id].t=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">	node[id].sz=r-l+<span class="number">1</span>;</span><br><span class="line">	node[id].t=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">if</span>(l==r)node[id].val.sum=a[l];</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="built_in">build</span>(id*<span class="number">2</span>,l,mid);</span><br><span class="line">		<span class="built_in">build</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> ql,<span class="type">int</span> qr,tag t)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==ql&amp;&amp;r==qr)&#123;</span><br><span class="line">		<span class="built_in">settag</span>(id,t);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">pushdown</span>(id);</span><br><span class="line">	<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(qr&lt;=mid)<span class="built_in">modify</span>(id*<span class="number">2</span>,l,mid,ql,qr,t);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ql&gt;mid)<span class="built_in">modify</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,ql,qr,t);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">modify</span>(id*<span class="number">2</span>,l,mid,ql,mid,t);</span><br><span class="line">		<span class="built_in">modify</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,qr,t);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">update</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">info <span class="title">query</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> ql,<span class="type">int</span> qr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(ql==l&amp;&amp;qr==r)&#123;</span><br><span class="line">		<span class="keyword">return</span> node[id].val;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">pushdown</span>(id);</span><br><span class="line">	<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(qr&lt;=mid)<span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>,l,mid,ql,qr);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ql&gt;mid)<span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,ql,qr);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">query</span>(id*<span class="number">2</span>,l,mid,ql,mid)+<span class="built_in">query</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,qr);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		cin&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">	<span class="keyword">while</span>(q--)&#123;</span><br><span class="line">		<span class="type">int</span> opt;</span><br><span class="line">		cin&gt;&gt;opt;</span><br><span class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="type">int</span> l,r,d;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r&gt;&gt;d;</span><br><span class="line">			<span class="built_in">modify</span>(<span class="number">1</span>,<span class="number">1</span>,n,l,r,tag&#123;<span class="number">1</span>,d&#125;);</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</span><br><span class="line">			<span class="type">int</span> l,r,d;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r&gt;&gt;d;</span><br><span class="line">			<span class="built_in">modify</span>(<span class="number">1</span>,<span class="number">1</span>,n,l,r,tag&#123;d,<span class="number">0</span>&#125;); </span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</span><br><span class="line">			<span class="type">int</span> l,r,d;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r&gt;&gt;d;</span><br><span class="line">			<span class="built_in">modify</span>(<span class="number">1</span>,<span class="number">1</span>,n,l,r,tag&#123;<span class="number">0</span>,d&#125;);</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">int</span> l,r;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">			<span class="keyword">auto</span> res=<span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,n,l,r);</span><br><span class="line">			cout&lt;&lt;res.sum&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h2 id="线段树哈希"><a href="#线段树哈希" class="headerlink" title="线段树哈希"></a>线段树哈希</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*https://codeforces.com/problemset/problem/213/E*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> int64;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>,D=<span class="number">200003</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;pp;</span><br><span class="line"><span class="type">int</span> a[N],b[N],pos[N];</span><br><span class="line">int64 d[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">info</span>&#123;</span><br><span class="line">	<span class="type">int</span> res;</span><br><span class="line">    int64 num;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	info val;</span><br><span class="line">&#125;node[N*<span class="number">4</span>];</span><br><span class="line">info <span class="keyword">operator</span> +(<span class="type">const</span> info &amp;a,<span class="type">const</span> info &amp;b)&#123;</span><br><span class="line">	info temp;</span><br><span class="line">    temp.res=a.res+b.res;</span><br><span class="line">    temp.num=a.num*d[b.res]+b.num;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	node[id].val=node[id*<span class="number">2</span>].val+node[id*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> dd)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		node[id].val=&#123;dd?node[id].val.res+<span class="number">1</span>:node[id].val.res<span class="number">-1</span>,(int64)dd&#125;;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">change</span>(id*<span class="number">2</span>,l,mid,pos,dd);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">change</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,pos,dd);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    int64 sum=<span class="number">0</span>,aa=<span class="number">0</span>;</span><br><span class="line">    d[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum=sum*D+a[i];</span><br><span class="line">        d[i]=d[i<span class="number">-1</span>]*D;</span><br><span class="line">        aa+=d[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        pos[b[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n)<span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i-n],<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i],i);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=n&amp;&amp;node[<span class="number">1</span>].val.num==(i-n)*aa+sum)</span><br><span class="line">            ++cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="线段树合并"><a href="#线段树合并" class="headerlink" title="线段树合并"></a>线段树合并</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*https://codeforces.com/problemset/problem/213/E*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> int64;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>,D=<span class="number">200003</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;pp;</span><br><span class="line"><span class="type">int</span> a[N],b[N],pos[N];</span><br><span class="line">int64 d[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">info</span>&#123;</span><br><span class="line">	<span class="type">int</span> res;</span><br><span class="line">    int64 num;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	info val;</span><br><span class="line">&#125;node[N*<span class="number">4</span>];</span><br><span class="line">info <span class="keyword">operator</span> +(<span class="type">const</span> info &amp;a,<span class="type">const</span> info &amp;b)&#123;</span><br><span class="line">	info temp;</span><br><span class="line">    temp.res=a.res+b.res;</span><br><span class="line">    temp.num=a.num*d[b.res]+b.num;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	node[id].val=node[id*<span class="number">2</span>].val+node[id*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> dd)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		node[id].val=&#123;dd?node[id].val.res+<span class="number">1</span>:node[id].val.res<span class="number">-1</span>,(int64)dd&#125;;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">change</span>(id*<span class="number">2</span>,l,mid,pos,dd);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">change</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,pos,dd);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    int64 sum=<span class="number">0</span>,aa=<span class="number">0</span>;</span><br><span class="line">    d[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum=sum*D+a[i];</span><br><span class="line">        d[i]=d[i<span class="number">-1</span>]*D;</span><br><span class="line">        aa+=d[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        pos[b[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n)<span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i-n],<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i],i);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=n&amp;&amp;node[<span class="number">1</span>].val.num==(i-n)*aa+sum)</span><br><span class="line">            ++cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="线段树建图"><a href="#线段树建图" class="headerlink" title="线段树建图"></a>线段树建图</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*https://codeforces.com/problemset/problem/213/E*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> int64;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>,D=<span class="number">200003</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;pp;</span><br><span class="line"><span class="type">int</span> a[N],b[N],pos[N];</span><br><span class="line">int64 d[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">info</span>&#123;</span><br><span class="line">	<span class="type">int</span> res;</span><br><span class="line">    int64 num;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	info val;</span><br><span class="line">&#125;node[N*<span class="number">4</span>];</span><br><span class="line">info <span class="keyword">operator</span> +(<span class="type">const</span> info &amp;a,<span class="type">const</span> info &amp;b)&#123;</span><br><span class="line">	info temp;</span><br><span class="line">    temp.res=a.res+b.res;</span><br><span class="line">    temp.num=a.num*d[b.res]+b.num;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span>&#123;</span><br><span class="line">	node[id].val=node[id*<span class="number">2</span>].val+node[id*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> dd)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		node[id].val=&#123;dd?node[id].val.res+<span class="number">1</span>:node[id].val.res<span class="number">-1</span>,(int64)dd&#125;;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">change</span>(id*<span class="number">2</span>,l,mid,pos,dd);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">change</span>(id*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r,pos,dd);</span><br><span class="line">		<span class="built_in">update</span>(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    int64 sum=<span class="number">0</span>,aa=<span class="number">0</span>;</span><br><span class="line">    d[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum=sum*D+a[i];</span><br><span class="line">        d[i]=d[i<span class="number">-1</span>]*D;</span><br><span class="line">        aa+=d[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        pos[b[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n)<span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i-n],<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">change</span>(<span class="number">1</span>,<span class="number">1</span>,m,pos[i],i);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=n&amp;&amp;node[<span class="number">1</span>].val.num==(i-n)*aa+sum)</span><br><span class="line">            ++cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
